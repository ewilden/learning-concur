// Generated by purs version 0.13.8
"use strict";
var Concur_Core_LiftWidget = require("../Concur.Core.LiftWidget/index.js");
var Concur_Core_Props = require("../Concur.Core.Props/index.js");
var Concur_Core_Types = require("../Concur.Core.Types/index.js");
var Concur_React_DOM = require("../Concur.React.DOM/index.js");
var Concur_React_Props = require("../Concur.React.Props/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var React_Ref = require("../React.Ref/index.js");
var textInputWithButton = function (val) {
    return function (buttonlabel) {
        return function (inpProps) {
            return function (buttonProps) {
                return Control_Bind.bind(Concur_Core_Types.widgetBind)(Effect_Class.liftEffect(Concur_Core_Types.widgetMonadEff(Data_Monoid.monoidArray))(React_Ref.createNodeRef))(function (ref) {
                    return Concur_React_DOM["div'"](Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([ Concur_React_DOM.input(Concur_Core_LiftWidget.widgetLiftWidget)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(inpProps)([ Data_Functor.map(Concur_Core_Props.functorProps)(Concur_React_Props.unsafeTargetValue)(Concur_React_Props.onKeyEnter), Concur_React_Props.defaultValue(val), Concur_React_Props.ref(React_Ref.fromRef(ref)) ])), Concur_React_DOM.text(Concur_Core_LiftWidget.widgetLiftWidget)(" "), Control_Bind.bind(Concur_Core_Types.widgetBind)(Concur_React_DOM.button(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(buttonProps)([ Concur_React_Props.onClick ]))([ Concur_React_DOM.text(Concur_Core_LiftWidget.widgetLiftWidget)(buttonlabel) ]))(function () {
                        return Control_Bind.bind(Concur_Core_Types.widgetBind)(Effect_Class.liftEffect(Concur_Core_Types.widgetMonadEff(Data_Monoid.monoidArray))(React_Ref.getCurrentRef(ref)))(function (mInput) {
                            if (mInput instanceof Data_Maybe.Nothing) {
                                return Control_Applicative.pure(Concur_Core_Types.widgetApplicative)(val);
                            };
                            if (mInput instanceof Data_Maybe.Just) {
                                return Control_Applicative.pure(Concur_Core_Types.widgetApplicative)(mInput.value0.value);
                            };
                            throw new Error("Failed pattern match at Concur.React.Widgets (line 48, column 7 - line 50, column 50): " + [ mInput.constructor.name ]);
                        });
                    }) ]);
                });
            };
        };
    };
};
var textInputEnter = function (val) {
    return function (reset) {
        return function (props) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(Concur_React_DOM.input(Concur_Core_LiftWidget.widgetLiftWidget)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(props)([ Concur_React_Props.onKeyEnter, Concur_React_Props.defaultValue(val) ])))(function (e) {
                return Control_Bind.bind(Concur_Core_Types.widgetBind)(Control_Applicative.pure(Concur_Core_Types.widgetApplicative)(Concur_React_Props.unsafeTargetValue(e)))(function ($$new) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Concur_Core_Types.widgetBind)(Control_Applicative.when(Concur_Core_Types.widgetApplicative)(reset)(Effect_Class.liftEffect(Concur_Core_Types.widgetMonadEff(Data_Monoid.monoidArray))(Concur_React_Props.resetTargetValue("")(e))))(function () {
                        return Control_Applicative.pure(Concur_Core_Types.widgetApplicative)($$new);
                    });
                });
            });
        };
    };
};
module.exports = {
    textInputEnter: textInputEnter,
    textInputWithButton: textInputWithButton
};
