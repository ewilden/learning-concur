// Generated by purs version 0.13.8
"use strict";
var $foreign = require("./foreign.js");
var Data_Show = require("../Data.Show/index.js");
var Interp = function (interp) {
    this.interp = interp;
};
var interpString = new Interp(function (a) {
    return a;
});
var interpFailEverythingElse = function (dictFail) {
    return new Interp(function (a) {
        return $foreign.unsafeCrashWith("A compiler error will prevent this from running.");
    });
};
var interp = function (dict) {
    return dict.interp;
};
var interpBooleanFunction = function (dictInterp) {
    return new Interp(function (a) {
        return function (b) {
            return interp(dictInterp)(a + Data_Show.show(Data_Show.showBoolean)(b));
        };
    });
};
var interpCharFunction = function (dictInterp) {
    return new Interp(function (a) {
        return function (b) {
            return interp(dictInterp)(a + Data_Show.show(Data_Show.showChar)(b));
        };
    });
};
var interpIntFunction = function (dictInterp) {
    return new Interp(function (a) {
        return function (b) {
            return interp(dictInterp)(a + Data_Show.show(Data_Show.showInt)(b));
        };
    });
};
var interpNumberFunction = function (dictInterp) {
    return new Interp(function (a) {
        return function (b) {
            return interp(dictInterp)(a + Data_Show.show(Data_Show.showNumber)(b));
        };
    });
};
var interpStringFunction = function (dictInterp) {
    return new Interp(function (a) {
        return function (b) {
            return interp(dictInterp)(a + b);
        };
    });
};
var i = function (dictInterp) {
    return interp(dictInterp)("");
};
module.exports = {
    Interp: Interp,
    interp: interp,
    i: i,
    interpString: interpString,
    interpStringFunction: interpStringFunction,
    interpBooleanFunction: interpBooleanFunction,
    interpIntFunction: interpIntFunction,
    interpNumberFunction: interpNumberFunction,
    interpCharFunction: interpCharFunction,
    interpFailEverythingElse: interpFailEverythingElse
};
